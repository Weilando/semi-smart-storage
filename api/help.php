<html>
<head>
  <title>API help</title>
  <style>
    table, th, td {
      border: 1px solid black;
      border-collapse: collapse;
    }
  </style>
</head>
<body>
  <h1>semi-smart-storage API</h1>
  <p>The API can be accessed via <a href="http://raspberrypi/api/">http://raspberrypi/api/</a>.
  Full routes are given below.</p>

  <p>Each request starts with the above URI.
  Remember that the list of parameters starts with <i>?</i> and several parameters are separated by <i>&</i>.<br>
  A request's type must be specified by <i>type=[name]</i>.
  Some requests may need parameters given by <i>[parameter]=[value]</i>.</p>

  <p>Requests can be tested easily via curl (command line client) and jq (jason formatter), e.g.:<br>
  <i>curl 'http://raspberrypi/api/get.php/?content=json&type=ALL_STORAGES' | jq</i><br>(fetches all known storages as JSON-list and renders it nicely)</p>

  <p>Queries changing data return an error message on failure and anything on success.</p>

  <hr>
  <h2>Request types</h2>
  <h3>Add</h3>
  <p>This API can be accessed via <a href="http://raspberrypi/api/add.php">add.php</a>.</p>

  <table style="width: 90%">
    <th scope="col">Type</th>
    <th scope="col">Parameters</th>
    <th scope="col">Description</th>

    <tr>
      <td><i>ITEM</i></td>
      <td><i>name</i>: string</td>
      <td>Adds an item with given <i>name</i> to the list of items.
        A unique id is generated by the database.</td>
    </tr>
    <tr>
      <td><i>STORAGE</i></td>
      <td><i>name</i>: string</td>
      <td>Adds a storage with given <i>name</i> to the list of storages.
      A unique id is generated by the database.</td>
    </tr>
    <tr>
      <td><i>CONTENT</i></td>
      <td>
        <i>itemId</i>: int<br>
        <i>unitId:</i> int<br>
        <i>quantity:</i> float<br>
        <i>storageId</i>: int
      </td>
      <td>Adds an item with <i>itemId</i>, <i>unitId</i> and <i>quantity</i> to a storage specified by <i>storageId</i> to the list of contents.
      A unique id is generated by the database.</td>
    </tr>
    <tr>
      <td><i>UNIT</i></td>
      <td><i>name</i>: string</td>
      <td>Adds a unit with given <i>name</i> to the list of units.
      A unique id is generated by the database.</td>
    </tr>
  </table>

  <hr>
  <h3>Delete</h3>
  <p>This API can be accessed via <a href="http://raspberrypi/api/delete.php">delete.php</a>.</p>

  <table style="width: 90%">
    <th scope="col">Type</th>
    <th scope="col">Parameters</th>
    <th scope="col">Description</th>

    <tr>
      <td><i>ITEM</i></td>
      <td><i>id</i>: int</td>
      <td>Removes the item with given <i>id</i> from the list of items.</td>
    </tr>
    <tr>
      <td><i>STORAGE</i></td>
      <td><i>id</i>: int</td>
      <td>Removes the storage with given <i>id</i> from the list of storages.</td>
    </tr>
    <tr>
      <td><i>CONTENT</i></td>
      <td>
        <i>itemId</i>: int<br>
        <i>storageId</i>: int
      </td>
      <td>Removes the item with given <i>itemId</i> in the storage specified by <i>storageId</i> from the list of contents.</td>
    </tr>
    <tr>
      <td><i>UNIT</i></td>
      <td><i>id</i>: int</td>
      <td>Removes the unit with given <i>id</i> from the list of units.</td>
    </tr>
  </table>

  <hr>
  <h3>Get</h3>
  <p>This API can be accessed via <a href="http://raspberrypi/api/get.php">get.php</a>.</p>

  <table style="width: 90%">
    <th scope="col">Type</th>
    <th scope="col">Parameters</th>
    <th scope="col">Description</th>

    <tr>
      <td><i>ALL_ITEMS</i></td>
      <td>none</td>
      <td>Returns id and name of all existing items.</td>
    </tr>
    <tr>
      <td><i>ALL_STORAGES</i></td>
      <td>none</td>
      <td>Returns id and name of all existing storages.</td>
    </tr>
    <tr>
      <td><i>ALL_ITEMS_IN_STORAGE</i></td>
      <td><i>storageId:</i> int</td>
      <td>Returns id, item-name, unit-name and quantity of all existing items inside a storage specified by <i>storageID</i>.</td>
    </tr>
    <tr>
      <td><i>ALL_UNITS</i></td>
      <td>none</td>
      <td>Returns id and name of all existing units.</td>
    </tr>
  </table>

  <h4>Response format</h4>
  <p>The API delivers plain HTML by default.
  It is possible to receive JSON via parameter <i>content=json</i>.</p>

  <hr>
  <h3>Update</h3>
  <p>This API can be accessed via <a href="http://raspberrypi/api/update.php">update.php</a>.</p>

  <table style="width: 90%">
    <th scope="col">Type</th>
    <th scope="col">Parameters</th>
    <th scope="col">Description</th>

    <tr>
      <td><i>ITEM</i></td>
      <td>
        <i>id</i>: int<br>
        <i>name</i>: string
      </td>
      <td>Updates name to <i>name</i> for the item with given <i>id</i> from the list of items.</td>
    </tr>
    <tr>
      <td><i>STORAGE</i></td>
      <td>
        <i>id</i>: int<br>
        <i>name</i>: string
      </td>
      <td>Updates name to <i>name</i> for the storage with given <i>id</i> from the list of storages.</td>
    </tr>
    <tr>
      <td><i>CONTENT</i></td>
      <td>
        <i>itemId</i>: int<br>
        <i>quantity</i>: float<br>
        <i>storageId</i>: int
      </td>
      <td>Updates quantity to <i>quantity</i> for the item with given <i>id</i> in the storage specified by <i>storageId</i> from the list of items.</td>
    </tr>
    <tr>
      <td><i>UNIT</i></td>
      <td>
        <i>id</i>: int<br>
        <i>name</i>: string
      </td>
      <td>Updates name to <i>name</i> for the unit with given <i>id</i> from the list of units.</td>
    </tr>
  </table>
</body>
</html>
